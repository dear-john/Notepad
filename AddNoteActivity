package com.spring_ballet.notepad;

import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.support.v7.app.ActionBar;
import android.support.v7.app.AlertDialog;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.text.TextUtils;
import android.view.KeyEvent;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.inputmethod.InputMethodManager;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.Toast;

import org.litepal.crud.DataSupport;

import java.util.Calendar;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;

public class AddNoteActivity extends AppCompatActivity {

    private EditText et_addNoteContent;
    private static final int TYPE_UPDATE = 5;
    private String choice_level = "L1";


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_add_note);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar_addNote);
        et_addNoteContent = (EditText) findViewById(R.id.et_addNoteContent);
        ImageView iv_save = (ImageView) findViewById(R.id.iv_save);
        ImageView iv_delete = (ImageView) findViewById(R.id.iv_delete);
        iv_save.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                onKeyDown(KeyEvent.KEYCODE_BACK, null);
            }
        });
        iv_delete.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                if (!TextUtils.isEmpty(et_addNoteContent.getText().toString())) {
                    Intent intent = getIntent();
                    long key = intent.getLongExtra("key", -1);
                    DataSupport.deleteAll(Note.class, "key = ?", key + "");
                }
                finish();
            }
        });
        setSupportActionBar(toolbar);
        ActionBar actionBar = getSupportActionBar();
        if (actionBar != null) {
            actionBar.setDisplayHomeAsUpEnabled(true);
            actionBar.setTitle("新建笔记");
        }
        int method = getIntent().getIntExtra("method", 0);
        if (method == TYPE_UPDATE) {
            long key = getIntent().getLongExtra("key", -1);
            if (key != -1) {
                List<Note> notes = DataSupport.where("key = ?", key + "").find(Note.class);
                String data = notes.get(0).getContent();
                et_addNoteContent.setText(data);
                et_addNoteContent.setSelection(data.length());
                et_addNoteContent.requestFocus();
            }
        }
        Timer timer = new Timer();
        timer.schedule(new TimerTask() {
            @Override
            public void run() {
                InputMethodManager manager = (InputMethodManager)
                        getSystemService(Context.INPUT_METHOD_SERVICE);
                manager.toggleSoftInput(0, InputMethodManager.HIDE_NOT_ALWAYS);
            }
        }, 500);
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.add_note_menu, menu);
        return true;
    }


    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        switch (item.getItemId()) {
            case android.R.id.home:
                finish();
                break;
            case R.id.set_level:
                showOptions();
                break;
            case R.id.share:
                Toast.makeText(AddNoteActivity.this, "share", Toast.LENGTH_SHORT).show();
                break;
            case R.id.output:
                Toast.makeText(AddNoteActivity.this, "导出", Toast.LENGTH_SHORT).show();
                break;
            default:
                break;
        }
        return true;
    }

    private void showOptions() {
        final String[] items = new String[]{"L1", "L2", "L3", "L4", "L5"};
        final AlertDialog.Builder builder = new AlertDialog.Builder(AddNoteActivity.this);
        builder.setTitle("重要等级:" + "\n" + "L1最低，L5最高");
        builder.setCancelable(true);
        builder.setSingleChoiceItems(items, 0, new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialogInterface, int i) {
                choice_level = items[i];
            }
        });
        builder.setPositiveButton("确定", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialogInterface, int i) {
            }
        });
        builder.show();
    }

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (keyCode == KeyEvent.KEYCODE_BACK) {
            String data = et_addNoteContent.getText().toString();
            if (!TextUtils.isEmpty(data)) {
                long key = getIntent().getLongExtra("key", -1);
                DataSupport.deleteAll(Note.class, "key = ?", key + "");
                Calendar calendar = Calendar.getInstance();
                String time = calendar.get(Calendar.YEAR) + "-" + (calendar.get(Calendar.MONTH) + 1)
                        + "-" + calendar.get(Calendar.DAY_OF_MONTH) + " "
                        + calendar.get(Calendar.HOUR_OF_DAY) + ":" + calendar.get(Calendar.MINUTE);
                Note note = new Note(System.currentTimeMillis(), time, choice_level, data);
                note.save();
                Intent intent = new Intent();
                intent.putExtra("key", note.getkey());
                setResult(RESULT_OK, intent);
            }
            finish();
            return true;
        }
        return false;
    }

}
